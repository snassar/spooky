# This workflow will build and test the spooky project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v -o build/spooky

    - name: Run unit tests
      run: go test -v ./...

    - name: Run unit tests with coverage
      run: |
        mkdir -p tests/reports
        go test ./... -coverprofile=./tests/coverage.out -covermode=atomic -coverpkg=./...

    - name: Install go-test-coverage
      run: go install github.com/vladopajic/go-test-coverage/v2@latest

    - name: Check coverage with go-test-coverage
      run: go-test-coverage --config=./tests/testcoverage.yml

    - name: Generate coverage report
      run: |
        go tool cover -html=./tests/coverage.out -o tests/reports/coverage.html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: tests/reports/coverage.html
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run golangci-lint
      run: golangci-lint run
