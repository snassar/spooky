name: Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true

    - name: Run unit tests
      run: |
        go test ./... -v -race -coverprofile=coverage.out

    - name: Check if coverage file exists
      id: coverage-check
      if: always()
      run: |
        if [ -f "coverage.out" ]; then
          echo "Coverage file exists, size: $(wc -c < coverage.out) bytes"
          echo "has-coverage=true" >> $GITHUB_OUTPUT
        else
          echo "No coverage file generated"
          echo "has-coverage=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload coverage to Codecov
      if: always() && steps.coverage-check.outputs.has-coverage == 'true'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Build binary
      run: |
        mkdir -p build
        go build -o build/spooky main.go
        ls -la build/

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: spooky-binary
        path: build/spooky
        retention-days: 1 