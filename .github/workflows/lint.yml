name: Lint Changed Go Files

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint:
    name: Lint Changed Go Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required to get the full history for diff

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m

    - name: Get changed Go files and packages
      id: changed-files
      run: |
        # Get list of changed .go files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.go$')
        echo "Changed Go files:"
        echo "$CHANGED_FILES"
        
        # Extract unique directories containing changed files
        if [ -n "$CHANGED_FILES" ]; then
          CHANGED_DIRS=$(echo "$CHANGED_FILES" | xargs -I {} dirname {} | sort -u | tr '\n' ' ')
          echo "Changed directories: $CHANGED_DIRS"
          echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_OUTPUT
        else
          echo "No Go files changed"
          echo "changed_dirs=" >> $GITHUB_OUTPUT
        fi

    - name: Run golangci-lint on changed packages
      run: |
        if [ -n "${{ steps.changed-files.outputs.changed_dirs }}" ]; then
          echo "Running golangci-lint on changed packages: ${{ steps.changed-files.outputs.changed_dirs }}"
          # Run golangci-lint on each changed directory
          for dir in ${{ steps.changed-files.outputs.changed_dirs }}; do
            if [ -d "$dir" ]; then
              echo "Linting package: $dir"
              golangci-lint run --timeout=5m "./$dir/..."
            fi
          done
        else
          echo "No Go packages to lint"
        fi 